@model IEnumerable<PersonalSchedulingAssistant.Models.Notification>
@{
    ViewData["Title"] = "My Notifications";
}

<div class="container mt-4">
    <h2><i class="bi bi-bell"></i> Notifications</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-info mt-3">
            <i class="bi bi-bell-slash"></i> No notifications yet.
        </div>
    }
    else
    {
        <ul class="list-group mt-3">
            @foreach (var n in Model)
            {
                <li class="list-group-item @(n.IsRead ? "text-muted" : "fw-bold")">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <div>@n.Title</div>
                            <small class="text-secondary">@n.Message</small><br />
                            <small>@n.CreatedAt.ToLocalTime().ToString("g")</small>
                        </div>
                        <form asp-action="MarkAsRead" asp-controller="Demmie" method="post" class="ms-3">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@n.NotificationId" />
                            <input type="hidden" name="returnUrl" value="@Url.Action("Notifications", "Demmie")" />
                            @if (!n.IsRead)
                            {
                                <button class="btn btn-sm btn-success">Mark as Read</button>
                            }
                        </form>

                    </div>
                </li>
            }
        </ul>
    }

    <div class="align-items-center mt-4">
        <a asp-controller="Demmie" asp-action="Index" class="btn btn-outline-secondary px-4 py-2 fw-semibold">
            <i class="fas fa-home me-2"></i> Back to Overview
        </a>
    </div>
</div>
